version: "3.9"
services:
  ### Reverse Proxy
  traefik:
    image: traefik
    restart: always
    container_name: traefik
    ports:
      - "80:80"
    command:
      - --api.insecure=true # set to 'false' on production
      - --api.dashboard=true
      - --api.debug=false
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.network=proxy
      - --entrypoints.http.address=:80

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=http"
      - "traefik.http.routers.api.rule=Host(`${TRAEFIK_HOST}`)"

  ### SIEM
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - http.host=0.0.0.0
      - discovery.type=single-node
      - script.allowed_types=inline
      - thread_pool.search.queue_size=100000
      - thread_pool.write.queue_size=10000
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0

  ### SOAR
  theHive:
    image: thehiveproject/thehive:3.5.2
    container_name: thehive
    depends_on:
      - elasticsearch
      - cortex
    command: --cortex-port 9001
      --cortex-key ${CORTEX_KEY}
    networks:
      - backend
      - proxy

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.thehive.entrypoints=http"
      - "traefik.http.services.thehive.loadbalancer.server.port=9000"
      - "traefik.http.routers.thehive.rule=Host(`${THEHIVE_HOST}`)"
    ports:
      - 9000:9000

  cortex:
    image: thehiveproject/cortex:3.1.7
    container_name: cortex
    depends_on:
      - elasticsearch
      - traefik
    command: --job-directory ${JOB_DIRECTORY}
    networks:
      - backend
      - proxy
    environment:
      - "JOB_DIRECTORY=${JOB_DIRECTORY}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./cortex_jobs/:${JOB_DIRECTORY}"

    labels:
      - "traefik.enable=true"
      - "traefik.http.services.cortex.loadbalancer.server.port=9001"
      - "traefik.http.routers.cortex.entrypoints=http"
      - "traefik.http.routers.cortex.rule=Host(`${CORTEX_HOST}`)"

    ports:
      - 9001:9001

networks:
  backend:
  proxy:
